{"version":3,"file":"popup/popup.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8CAA8C,mCAAmC;AACjF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2BAA2B;AACjE;AACA;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://ai-browser-assistant/./src/popup/popup.js"],"sourcesContent":["class PopupManager {\r\n  constructor() {\r\n    this.elements = {\r\n      adBlockingToggle: document.getElementById('adBlockingToggle'),\r\n      searchReorderingToggle: document.getElementById('searchReorderingToggle'),\r\n      contextSuggestionsToggle: document.getElementById('contextSuggestionsToggle'),\r\n      adsBlockedCount: document.getElementById('adsBlockedCount'),\r\n      apiCallsCount: document.getElementById('apiCallsCount'),\r\n      settingsButton: document.getElementById('settingsButton'),\r\n      refreshButton: document.getElementById('refreshButton')\r\n    };\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  async initialize() {\r\n    // 加载设置\r\n    await this.loadSettings();\r\n    \r\n    // 添加事件监听器\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  setupEventListeners() {\r\n    // 特性开关的事件监听器\r\n    this.elements.adBlockingToggle?.addEventListener('change', (e) => \r\n      this.updateFeature('adBlocking', e.target.checked));\r\n    \r\n    this.elements.searchReorderingToggle?.addEventListener('change', (e) => \r\n      this.updateFeature('searchReordering', e.target.checked));\r\n    \r\n    this.elements.contextSuggestionsToggle?.addEventListener('change', (e) => \r\n      this.updateFeature('contextSuggestions', e.target.checked));\r\n\r\n    // Settings 按钮事件监听器\r\n    this.elements.settingsButton?.addEventListener('click', () => {\r\n      if (chrome.runtime.openOptionsPage) {\r\n        chrome.runtime.openOptionsPage();\r\n      } else {\r\n        window.open(chrome.runtime.getURL('options/options.html'));\r\n      }\r\n    });\r\n\r\n    // Refresh Page 按钮事件监听器\r\n    this.elements.refreshButton?.addEventListener('click', async () => {\r\n      const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\r\n      if (tab?.id) {\r\n        chrome.tabs.reload(tab.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      const { features = {} } = await chrome.storage.sync.get('features');\r\n      \r\n      // 设置默认值\r\n      const defaultFeatures = {\r\n        adBlocking: true,\r\n        searchReordering: true,\r\n        contextSuggestions: true,\r\n        ...features\r\n      };\r\n\r\n      // 更新开关状态\r\n      if (this.elements.adBlockingToggle) {\r\n        this.elements.adBlockingToggle.checked = defaultFeatures.adBlocking;\r\n      }\r\n      if (this.elements.searchReorderingToggle) {\r\n        this.elements.searchReorderingToggle.checked = defaultFeatures.searchReordering;\r\n      }\r\n      if (this.elements.contextSuggestionsToggle) {\r\n        this.elements.contextSuggestionsToggle.checked = defaultFeatures.contextSuggestions;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load settings:', error);\r\n    }\r\n  }\r\n\r\n  async updateFeature(featureName, enabled) {\r\n    try {\r\n      // 获取当前特性设置\r\n      const { features = {} } = await chrome.storage.sync.get('features');\r\n      \r\n      // 更新特定特性\r\n      const updatedFeatures = {\r\n        ...features,\r\n        [featureName]: enabled\r\n      };\r\n\r\n      // 保存到存储\r\n      await chrome.storage.sync.set({ features: updatedFeatures });\r\n\r\n      // 通知内容脚本更新\r\n      try {\r\n        const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\r\n        if (tab?.id) {\r\n          await chrome.tabs.sendMessage(tab.id, {\r\n            type: 'updateFeature',\r\n            feature: featureName,\r\n            enabled\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.warn('Failed to notify content script:', error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update feature:', error);\r\n      // 回滚 UI 状态\r\n      const toggle = this.elements[`${featureName}Toggle`];\r\n      if (toggle) {\r\n        toggle.checked = !enabled;\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateStats() {\r\n    try {\r\n      const { dailyStats = {} } = await chrome.storage.local.get('dailyStats');\r\n      const today = new Date().toDateString();\r\n      const todayStats = dailyStats[today] || { adsBlocked: 0, apiCalls: 0 };\r\n\r\n      if (this.elements.adsBlockedCount) {\r\n        this.elements.adsBlockedCount.textContent = todayStats.adsBlocked;\r\n      }\r\n      if (this.elements.apiCallsCount) {\r\n        this.elements.apiCallsCount.textContent = todayStats.apiCalls;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update stats:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// 初始化 PopupManager\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const popup = new PopupManager();\r\n});\r\n"],"names":[],"sourceRoot":""}